/**
 * DetailsPage.java Created by Florian Hauck on 25.03.2013
 */
package com.dhbw_db.view;

import java.text.SimpleDateFormat;
import java.util.Date;

import com.dhbw_db.control.DetailsController;
import com.dhbw_db.control.MainController;
import com.dhbw_db.model.beans.User;
import com.dhbw_db.model.request.Request;
import com.dhbw_db.model.request.Request.Status;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.PopupDateField;

/**
 * The details layout for one request. Shows buttons to approve or refuse the
 * request if the user is a lecturer. Shows buttons to cancel or extend the
 * request if the user is a student
 * 
 * @author Florian Hauck
 * @version 0.1
 * @since 0.1
 */
public class DetailsPage extends CustomComponent {

	private static final long serialVersionUID = -7823146083693635093L;

	@AutoGenerated
	private AbsoluteLayout mainLayout;

	@AutoGenerated
	private HorizontalLayout buttonLayout;

	@AutoGenerated
	private Button extendButton;

	@AutoGenerated
	private PopupDateField extendDateField;

	@AutoGenerated
	private Button retractButton;

	@AutoGenerated
	private Button rejectButton;

	@AutoGenerated
	private Button approveButton;

	private Button completeButton;

	private Button cancelButton;

	@AutoGenerated
	private Label commentLabel2;

	@AutoGenerated
	private Label commentLabel;

	@AutoGenerated
	private Label statusLabel2;

	@AutoGenerated
	private Label statusLabel;

	@AutoGenerated
	private Label requestEndLabel2;

	@AutoGenerated
	private Label requestEndLabel;

	@AutoGenerated
	private Label endDateLabel2;

	@AutoGenerated
	private Label endDateLabel;

	@AutoGenerated
	private Label startDateLabel2;

	@AutoGenerated
	private Label startDateLabel;

	@AutoGenerated
	private Label creationDateLabel2;

	@AutoGenerated
	private Label createDateLabel;

	@AutoGenerated
	private Label oSLabel2;

	@AutoGenerated
	private Label oSLabel;

	@AutoGenerated
	private Label lecturerLabel;

	@AutoGenerated
	private Label lecturerLabel2;

	@AutoGenerated
	private Label requesterLabel;

	@AutoGenerated
	private Label requesterLabel2;

	@AutoGenerated
	private Label notebookLabel2;

	@AutoGenerated
	private Label notebookLabel;

	@AutoGenerated
	private Label iDLabel2;

	@AutoGenerated
	private Label iDLabel;

	@AutoGenerated
	private Label headlineLabel;

	private MainController mc;

	private Request request;

	private DetailsController control;

	/**
	 * The constructor builds the main layout for the view.
	 */
	public DetailsPage(Request request) {
		this.request = request;
		control = new DetailsController(this,
										request);
		buildMainLayout();
		this.insertRequest(request);
		setCompositionRoot(mainLayout);

	}

	/**
	 * Builds the main layout and adds some labels and the horizontal layout to
	 * it. The horizontal layout contains the buttons.
	 * 
	 * @return The main layout.
	 */
	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// headlineLabel
		headlineLabel = new Label();
		headlineLabel.setStyleName("headline");
		headlineLabel.setImmediate(false);
		headlineLabel.setWidth("80px");
		headlineLabel.setHeight("-1px");
		headlineLabel.setValue("Details");
		mainLayout.addComponent(headlineLabel, "top:20.0px;left:20.0px;");

		// iDLabel
		iDLabel = new Label();
		iDLabel.setStyleName("subHeadline");
		iDLabel.setImmediate(false);
		iDLabel.setWidth("-1px");
		iDLabel.setHeight("-1px");
		iDLabel.setValue("ID:");
		mainLayout.addComponent(iDLabel, "top:60.0px;left:20.0px;");

		// iDLabel2
		iDLabel2 = new Label();
		iDLabel2.setImmediate(false);
		iDLabel2.setWidth("-1px");
		iDLabel2.setHeight("-1px");
		iDLabel2.setValue("Label");
		mainLayout.addComponent(iDLabel2, "top:60.0px;left:200.0px;");

		// notebookLabel
		notebookLabel = new Label();
		notebookLabel.setStyleName("subHeadline");
		notebookLabel.setImmediate(false);
		notebookLabel.setWidth("-1px");
		notebookLabel.setHeight("-1px");
		notebookLabel.setValue("Notebook ID:");
		mainLayout.addComponent(notebookLabel, "top:80.0px;left:20.0px;");

		// notebookLabel2
		notebookLabel2 = new Label();
		notebookLabel2.setImmediate(false);
		notebookLabel2.setWidth("-1px");
		notebookLabel2.setHeight("-1px");
		notebookLabel2.setValue("Label");
		mainLayout.addComponent(notebookLabel2, "top:80.0px;left:200.0px;");

		// requesterLabel
		requesterLabel = new Label();
		requesterLabel.setStyleName("subHeadline");
		requesterLabel.setImmediate(false);
		requesterLabel.setWidth("-1px");
		requesterLabel.setHeight("-1px");
		requesterLabel.setValue("Antragssteller:");
		mainLayout.addComponent(requesterLabel, "top:100.0px;left:20.0px;");

		// requesterLabel2
		requesterLabel2 = new Label();
		requesterLabel2.setImmediate(false);
		requesterLabel2.setWidth("-1px");
		requesterLabel2.setHeight("-1px");
		requesterLabel2.setValue("Label");
		mainLayout.addComponent(requesterLabel2, "top:100.0px;left:200.0px;");

		// lecturerLabel
		lecturerLabel = new Label();
		lecturerLabel.setStyleName("subHeadline");
		lecturerLabel.setImmediate(false);
		lecturerLabel.setWidth("-1px");
		lecturerLabel.setHeight("-1px");
		lecturerLabel.setValue("Betreuer:");
		mainLayout.addComponent(lecturerLabel, "top:120.0px;left:20.0px;");

		// lecturerLabel2
		lecturerLabel2 = new Label();
		lecturerLabel2.setImmediate(false);
		lecturerLabel2.setWidth("-1px");
		lecturerLabel2.setHeight("-1px");
		lecturerLabel2.setValue("Label");
		mainLayout.addComponent(lecturerLabel2, "top:120.0px;left:200.0px;");

		// oSLabel
		oSLabel = new Label();
		oSLabel.setStyleName("subHeadline");
		oSLabel.setImmediate(false);
		oSLabel.setWidth("-1px");
		oSLabel.setHeight("-1px");
		oSLabel.setValue("Betriebssystem:");
		mainLayout.addComponent(oSLabel, "top:140.0px;left:20.0px;");

		// oSLabel2
		oSLabel2 = new Label();
		oSLabel2.setImmediate(false);
		oSLabel2.setWidth("-1px");
		oSLabel2.setHeight("-1px");
		oSLabel2.setValue("Label");
		mainLayout.addComponent(oSLabel2, "top:140.0px;left:200.0px;");

		// createDateLabel
		createDateLabel = new Label();
		createDateLabel.setStyleName("subHeadline");
		createDateLabel.setImmediate(false);
		createDateLabel.setWidth("-1px");
		createDateLabel.setHeight("-1px");
		createDateLabel.setValue("Erstellung des Antrages:");
		mainLayout.addComponent(createDateLabel, "top:160.0px;left:20.0px;");

		// creationDateLabel2
		creationDateLabel2 = new Label();
		creationDateLabel2.setImmediate(false);
		creationDateLabel2.setWidth("-1px");
		creationDateLabel2.setHeight("-1px");
		creationDateLabel2.setValue("Label");
		mainLayout.addComponent(creationDateLabel2, "top:160.0px;left:200.0px;");

		// startDateLabel
		startDateLabel = new Label();
		startDateLabel.setStyleName("subHeadline");
		startDateLabel.setImmediate(false);
		startDateLabel.setWidth("-1px");
		startDateLabel.setHeight("-1px");
		startDateLabel.setValue("Ausleihdatum:");
		mainLayout.addComponent(startDateLabel, "top:180.0px;left:20.0px;");

		// startDateLabel2
		startDateLabel2 = new Label();
		startDateLabel2.setImmediate(false);
		startDateLabel2.setWidth("-1px");
		startDateLabel2.setHeight("-1px");
		startDateLabel2.setValue("Label");
		mainLayout.addComponent(startDateLabel2, "top:180.0px;left:200.0px;");

		// endDateLabel
		endDateLabel = new Label();
		endDateLabel.setStyleName("subHeadline");
		endDateLabel.setImmediate(false);
		endDateLabel.setWidth("-1px");
		endDateLabel.setHeight("-1px");
		endDateLabel.setValue("RÃ¼ckgabedatum:");
		mainLayout.addComponent(endDateLabel, "top:200.0px;left:20.0px;");

		// endDateLabel2
		endDateLabel2 = new Label();
		endDateLabel2.setImmediate(false);
		endDateLabel2.setWidth("-1px");
		endDateLabel2.setHeight("-1px");
		endDateLabel2.setValue("Label");
		mainLayout.addComponent(endDateLabel2, "top:200.0px;left:200.0px;");

		// requestEndLabel
		requestEndLabel = new Label();
		requestEndLabel.setStyleName("subHeadline");
		requestEndLabel.setImmediate(false);
		requestEndLabel.setWidth("-1px");
		requestEndLabel.setHeight("-1px");
		requestEndLabel.setValue("Ende des Antrages:");
		mainLayout.addComponent(requestEndLabel, "top:220.0px;left:20.0px;");

		// requestEndLabel2
		requestEndLabel2 = new Label();
		requestEndLabel2.setImmediate(false);
		requestEndLabel2.setWidth("-1px");
		requestEndLabel2.setHeight("-1px");
		requestEndLabel2.setValue("Label");
		mainLayout.addComponent(requestEndLabel2, "top:220.0px;left:200.0px;");

		// statusLabel
		statusLabel = new Label();
		statusLabel.setStyleName("subHeadline");
		statusLabel.setImmediate(false);
		statusLabel.setWidth("-1px");
		statusLabel.setHeight("-1px");
		statusLabel.setValue("Status:");
		mainLayout.addComponent(statusLabel, "top:240.0px;left:20.0px;");

		// statusLabel2
		statusLabel2 = new Label();
		statusLabel2.setImmediate(false);
		statusLabel2.setWidth("-1px");
		statusLabel2.setHeight("-1px");
		statusLabel2.setValue("Label");
		mainLayout.addComponent(statusLabel2, "top:240.0px;left:200.0px;");

		// commentLabel
		commentLabel = new Label();
		commentLabel.setStyleName("subHeadline");
		commentLabel.setImmediate(false);
		commentLabel.setWidth("-1px");
		commentLabel.setHeight("-1px");
		commentLabel.setValue("Bemerkung fÃ¼r den Betreuer:");
		mainLayout.addComponent(commentLabel, "top:260.0px;left:20.0px;");

		// commentLabel2
		commentLabel2 = new Label();
		commentLabel2.setImmediate(false);
		commentLabel2.setWidth("-1px");
		commentLabel2.setHeight("-1px");
		commentLabel2.setValue("Label");
		mainLayout.addComponent(commentLabel2, "top:260.0px;left:200.0px;");

		// horizontalLayout_1
		buttonLayout = buildHorizontalLayout_1();
		mainLayout.addComponent(buttonLayout, "top:300.0px;left:18.0px;");

		return mainLayout;
	}

	/**
	 * Builds the horizontal layout and all buttons. Checks if the user is a
	 * student or a lecturer and adds the needed buttons to the layout.
	 * 
	 * @return The horizontal layout which contains the buttons.
	 */
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		buttonLayout = new HorizontalLayout();
		buttonLayout.setImmediate(false);
		buttonLayout.setWidth("-1px");
		buttonLayout.setHeight("-1px");
		buttonLayout.setMargin(false);
		buttonLayout.setSpacing(true);

		// approveButton
		approveButton = new Button();
		approveButton.setCaption("Genehmigen");
		approveButton.setImmediate(true);
		approveButton.setWidth("-1px");
		approveButton.setHeight("-1px");

		// rejectButton
		rejectButton = new Button();
		rejectButton.setCaption("Ablehnen");
		rejectButton.setImmediate(true);
		rejectButton.setWidth("-1px");
		rejectButton.setHeight("-1px");

		// retractButton
		retractButton = new Button();
		retractButton.setCaption("ZurÃ¼ckziehen");
		retractButton.setImmediate(true);
		retractButton.setWidth("-1px");
		retractButton.setHeight("-1px");

		// extendDateField
		extendDateField = new PopupDateField();
		extendDateField.setCaption("VerlÃ¤ngern bis");
		extendDateField.setWidth("-1px");
		extendDateField.setHeight("23px");

		// extendButton
		extendButton = new Button();
		extendButton.setCaption("VerlÃ¤ngerung");
		extendButton.setImmediate(true);
		extendButton.setWidth("-1px");
		extendButton.setHeight("-1px");

		// completeButton
		completeButton = new Button();
		completeButton.setCaption("Beenden");
		completeButton.setImmediate(true);

		// cancelButton
		cancelButton = new Button();
		cancelButton.setCaption("Abbrechen");
		cancelButton.setImmediate(true);

		mc = MainController.get();
		User u = mc.getUser();

		if (u.getID() == request.getRequesterId()) {
			if (request.getStatus() == Status.OPEN) {
				retractButton.addClickListener(control);
				buttonLayout.addComponent(retractButton);
				buttonLayout.setComponentAlignment(	retractButton,
													new Alignment(9));
			}
			if (request.getStatus() == Status.APPROVED) {
				extendDateField.setDateFormat("yyyy-MM-dd");
				extendDateField.setTextFieldEnabled(false);
				extendDateField.setImmediate(true);
				extendDateField.setValue(new Date());
				extendDateField.addValueChangeListener(control);
				extendButton.addClickListener(control);
				buttonLayout.addComponent(extendDateField);
				buttonLayout.addComponent(extendButton);
				buttonLayout.setComponentAlignment(	extendButton,
													new Alignment(9));
			}
		}
		if (u.getID() == request.getApproverId()
				&& request.getStatus() == Status.OPEN) {
			approveButton.addClickListener(control);
			buttonLayout.addComponent(approveButton);
			buttonLayout.setComponentAlignment(approveButton, new Alignment(9));
			rejectButton.addClickListener(control);
			buttonLayout.addComponent(rejectButton);
			buttonLayout.setComponentAlignment(rejectButton, new Alignment(9));
		}
		if (u.isAdmin()) {
			Status status = request.getStatus();
			if (status == Status.APPROVED || status == Status.OVERDUE) {
				completeButton.addClickListener(control);
				buttonLayout.addComponent(completeButton);
				buttonLayout.setComponentAlignment(	completeButton,
													new Alignment(9));
			}
			if (status == Status.OPEN || status == Status.OVERDUE
					|| status == Status.ERROR || status == Status.APPROVED) {
				cancelButton.addClickListener(control);
				buttonLayout.addComponent(cancelButton);
				buttonLayout.setComponentAlignment(	cancelButton,
													new Alignment(9));
			}

		}

		return buttonLayout;
	}

	/**
	 * Adds the info's from a request to the labels.
	 * 
	 * @param The request r that is shown on the page.
	 */
	public void insertRequest(Request r) {
		MainController mc = MainController.get();
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		iDLabel2.setValue("" + r.getId());
		notebookLabel2.setValue("" + mc.getDataAccess()
										.getNotebookForID(r.getNotebookId())
										.getName());
		requesterLabel2.setValue((mc.getDataAccess().getUserForID(r.getRequesterId())).getLastName());
		lecturerLabel2.setValue((mc.getDataAccess().getUserForID(r.getApproverId())).getLastName());
		oSLabel2.setValue((mc.getDataAccess().getOSForID(r.getOs())));
		creationDateLabel2.setValue("" + sdf.format(r.getCreated()));
		startDateLabel2.setValue("" + sdf.format(r.getStart()));
		endDateLabel2.setValue("" + sdf.format(r.getUntil()));
		requestEndLabel2.setValue(""
				+ (r.getEnd() == null ? "Kein Enddatum bisher"
						: sdf.format(r.getEnd())));
		statusLabel2.setValue(r.getStatus()
								.toString());
		commentLabel2.setValue(r.getDescription());
	}

	/**
	 * To set the earliest date in the date field
	 * 
	 * @param date the earliest possible date
	 */
	public void setDate(Date date) {
		extendDateField.setValue(date);
	}

	/**
	 * Allows to use the date fields selected date for validation
	 * 
	 * @return
	 */
	public Date getDate() {
		return extendDateField.getValue();
	}

}
